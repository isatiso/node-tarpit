name: Build and Test

on:
  push:
    branches:
      - 'dev'
  pull_request:
    branches:
      - '*'
jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 14.x
          - 16.x
          - 18.x
        rabbitmq-version:
          - 3.9
          - 3.10
    services:
      rabbitmq:
        image: rabbitmq:${{ matrix.rabbitmq-version }}
        env:
          RABBITMQ_DEFAULT_USER: admin
          RABBITMQ_DEFAULT_PASS: admin_password
        ports:
          - 5672/tcp
        options: --health-cmd "rabbitmqctl node_health_check" --health-interval 10s --health-timeout 5s --health-retries 5
      mongodb:
        image: mongo:5
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: admin_password
          MONGO_INITDB_DATABASE: test
        options: --health-cmd mongo --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 27017:27017
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install
        run: yarn --frozen-lockfile

      - name: Build
        run: lerna run build

      - name: Test
        env:
          RABBITMQ_URL: amqp://admin:admin_password@localhost:${{ job.services.rabbitmq.ports[5672] }}
          MONGODB_URL: mongodb://admin:admin_password@localhost:27017/admin
        run: lerna run test --verbose

      - name: Upload coverage files
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: ./actions/upload-codecov
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
